{
  "contractName": "WebaverseERC20",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "isAllowedMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "addAllowedMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "a",
          "type": "address"
        }
      ],
      "name": "removeAllowedMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"addAllowedMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"isAllowedMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"removeAllowedMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAllowedMinter(address)\":{\"details\":\"Add an account to the list of accounts allowed to create ERC20 tokens\",\"params\":{\"a\":\"address to whitelist\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Create a new fungible token\",\"params\":{\"cap\":\"Sets the token market cap. This value is immutable, it can only be set once during construction. Default cap: 2147483648000000000000000000 or (2**31) + '000000000000000000'\",\"name\":\"Name of the token (default is FT)\",\"symbol\":\"Token identifier (default is SILK)\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isAllowedMinter(address)\":{\"details\":\"Test if an address is allowed to mint ERC20 tokens\",\"params\":{\"a\":\"address to test\"},\"returns\":{\"_0\":\"true if address is allowed to mint\"}},\"mint(address,uint256)\":{\"details\":\"Mint ERC20 tokens\",\"params\":{\"account\":\"Tokens created for this account\",\"amount\":\"Number of tokens to mint\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeAllowedMinter(address)\":{\"details\":\"Remove an account from the list of accounts allowed to create ERC20 tokens\",\"params\":{\"a\":\"address to remove from whitelist\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"Extension of {ERC20} that adds a cap to the supply of tokens. \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/ethereum/WebaverseERC20.sol\":\"WebaverseERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"project:/ethereum/Context.sol\":{\"keccak256\":\"0xd9e1cdbea4cf7c51ac26f5782db0fb3d78c1b37e090547e83aef497a727a18f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5017e004334d7579774232e18f739ee9eb39438d03c49a9451a35e315c28761b\",\"dweb:/ipfs/QmNb8Q8C6WLgtWqCE7iL5T1UN52Q6QsE7ZtVc6ppcvViXe\"]},\"project:/ethereum/ERC20.sol\":{\"keccak256\":\"0x7a83979837aa9901995bf4d4504e24b1c76f43b9cb6e4892b4122d689bae8e7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f37a0a6ea82156845aa5e7833ad869014d098dd404f1d86a630d78af4cc9828\",\"dweb:/ipfs/QmUaRt6oFkC2T3PrvoQr1RdCZcjKDFBbf9yRZh2F96nZnf\"]},\"project:/ethereum/ERC20Capped.sol\":{\"keccak256\":\"0xb0192639d0ada788b115f7cee3fcff66bc387a0291874e5792b13a9c3e3fb37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4792e16e69ea88de901a1c746fdda5e75a0552e42b506c50c3ec517e930e25ec\",\"dweb:/ipfs/Qmd4ciMnA8KYRQ5pKRGGPRHFftyZdv91U1LFqQJypxk8o2\"]},\"project:/ethereum/IERC20.sol\":{\"keccak256\":\"0x979000648732c91f60536a23950b83e11a1f47204cb280cf2b8dc0a1280258da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://880bda603cd4c34690385db83633dd3918de7a96d9361089d9329ca81ef4e273\",\"dweb:/ipfs/QmRZqTMmCpNYqCcEsbMMtvF6NYKDarNnNbJseZ2LLDrevA\"]},\"project:/ethereum/SafeMath.sol\":{\"keccak256\":\"0x8d890f7a794b66b8b3ab54779603c254f85ee0d436dd4a17b3543c6629b726f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://887bb68104c8f862a66939b192a85e79564bed9bbe72cda6240fd89bbea642fd\",\"dweb:/ipfs/QmbC56SFqW7UCx26RfPFWPiEXnQTJXSBA5r4SrojRMHqeM\"]},\"project:/ethereum/WebaverseERC20.sol\":{\"keccak256\":\"0xd51b8e471184d4b0272f2c3b6d7ac98a337e355e1bdb6a5c2cf8e9ca417a4c6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ece6ef8132bcc2f90d720a0d627d594886e6e948c64e441c9c5e7f47512c8c2a\",\"dweb:/ipfs/QmRRuQ3dSgX6sULkTqkuZRu4fP3LsfpTiLtLoWPf7TdUvf\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806340c10f1911610097578063a457c2d711610066578063a457c2d71461030c578063a9059cbb14610338578063bad39b9614610364578063dd62ed3e1461038a57610100565b806340c10f191461028a578063488603df146102b857806370a08231146102de57806395d89b411461030457610100565b806323b872dd116100d357806323b872dd14610202578063313ce56714610238578063355274ea14610256578063395093511461025e57610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c25780631f3b4c90146101dc575b600080fd5b61010d6103b8565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561044e565b604080519115158252519081900360200190f35b6101ca61046b565b60408051918252519081900360200190f35b6101ae600480360360208110156101f257600080fd5b50356001600160a01b0316610471565b6101ae6004803603606081101561021857600080fd5b506001600160a01b0381358116916020810135909116906040013561048f565b610240610516565b6040805160ff9092168252519081900360200190f35b6101ca61051f565b6101ae6004803603604081101561027457600080fd5b506001600160a01b038135169060200135610525565b6102b6600480360360408110156102a057600080fd5b506001600160a01b038135169060200135610573565b005b6102b6600480360360208110156102ce57600080fd5b50356001600160a01b03166105db565b6101ca600480360360208110156102f457600080fd5b50356001600160a01b03166106c8565b61010d6106e3565b6101ae6004803603604081101561032257600080fd5b506001600160a01b038135169060200135610744565b6101ae6004803603604081101561034e57600080fd5b506001600160a01b0381351690602001356107ac565b6102b66004803603602081101561037a57600080fd5b50356001600160a01b03166107c0565b6101ca600480360360408110156103a057600080fd5b506001600160a01b03813581169160200135166108f9565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104445780601f1061041957610100808354040283529160200191610444565b820191906000526020600020905b81548152906001019060200180831161042757829003601f168201915b5050505050905090565b600061046261045b610924565b8484610928565b50600192915050565b60025490565b6001600160a01b031660009081526007602052604090205460ff1690565b600061049c848484610a14565b61050c846104a8610924565b61050785604051806060016040528060288152602001610e83602891396001600160a01b038a166000908152600160205260408120906104e6610924565b6001600160a01b031681526020810191909152604001600020549190610b6f565b610928565b5060019392505050565b60055460ff1690565b60065490565b6000610462610532610924565b846105078560016000610543610924565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610c06565b61057c33610471565b6105cd576040805162461bcd60e51b815260206004820152601660248201527f73656e646572206973206e6f742061206d696e74657200000000000000000000604482015290519081900360640190fd5b6105d78282610c67565b5050565b6105e433610471565b610635576040805162461bcd60e51b815260206004820152601660248201527f73656e646572206973206e6f742061206d696e74657200000000000000000000604482015290519081900360640190fd5b61063e81610471565b15610690576040805162461bcd60e51b815260206004820152601a60248201527f74617267657420697320616c72656164792061206d696e746572000000000000604482015290519081900360640190fd5b6001600160a01b0381166000908152600760205260409020805460ff191660019081179091556008546106c291610c06565b60085550565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104445780601f1061041957610100808354040283529160200191610444565b6000610462610751610924565b8461050785604051806060016040528060258152602001610ef4602591396001600061077b610924565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610b6f565b60006104626107b9610924565b8484610a14565b6107c933610471565b61081a576040805162461bcd60e51b815260206004820152601660248201527f73656e646572206973206e6f742061206d696e74657200000000000000000000604482015290519081900360640190fd5b61082381610471565b610874576040805162461bcd60e51b815260206004820152601660248201527f746172676574206973206e6f742061206d696e74657200000000000000000000604482015290519081900360640190fd5b6001600854116108cb576040805162461bcd60e51b815260206004820152601d60248201527f63616e6e6f742072656d6f766520746865206f6e6c79206d696e746572000000604482015290519081900360640190fd5b6001600160a01b0381166000908152600760205260409020805460ff191690556008546106c2906001610d57565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661096d5760405162461bcd60e51b8152600401808060200182810382526024815260200180610ed06024913960400191505060405180910390fd5b6001600160a01b0382166109b25760405162461bcd60e51b8152600401808060200182810382526022815260200180610e3b6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a595760405162461bcd60e51b8152600401808060200182810382526025815260200180610eab6025913960400191505060405180910390fd5b6001600160a01b038216610a9e5760405162461bcd60e51b8152600401808060200182810382526023815260200180610e186023913960400191505060405180910390fd5b610aa9838383610d99565b610ae681604051806060016040528060268152602001610e5d602691396001600160a01b0386166000908152602081905260409020549190610b6f565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b159082610c06565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bfe5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bc3578181015183820152602001610bab565b50505050905090810190601f168015610bf05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c60576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cc2576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610cce60008383610d99565b600254610cdb9082610c06565b6002556001600160a01b038216600090815260208190526040902054610d019082610c06565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000610c6083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b6f565b610da4838383610e12565b6001600160a01b038316610e125760065481610dbe61046b565b011115610e12576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122060de11891518d5bdb29a34b0881be3f11d9011d365daf06fa5fc2748fef1073064736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "168:2439:44:-:0;;;751:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;751:229:44;;;;;;;;;;-1:-1:-1;751:229:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;751:229:44;;;;;;;;;;-1:-1:-1;751:229:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;751:229:44;;;;;;;2058:12:11;;751:229:44;;-1:-1:-1;751:229:44;;-1:-1:-1;865:4:44;;871:6;;2058:12:11;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2081:16:11;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2108:9:11;:14;;-1:-1:-1;;2108:14:11;2120:2;2108:14;;;-1:-1:-1;433:7:13;425:41;;;;;-1:-1:-1;;;425:41:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;477:4;:10;-1:-1:-1;;922:10:44::2;907:26;::::0;;;:14:::2;:26;::::0;;;;:33;;-1:-1:-1;;907:33:44::2;936:4;907:33:::0;;::::2;::::0;;;951:17:::2;:21:::0;-1:-1:-1;168:2439:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:2439:44;;;-1:-1:-1;168:2439:44;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "168:2439:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:83:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4306:169;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4306:169:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3275:100;;;:::i;:::-;;;;;;;;;;;;;;;;1154:106:44;;;;;;;;;;;;;;;;-1:-1:-1;1154:106:44;-1:-1:-1;;;;;1154:106:44;;:::i;4957:321:11:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4957:321:11;;;;;;;;;;;;;;;;;:::i;3127:83::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;579:75:13;;;:::i;5687:218:11:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5687:218:11;;;;;;;;:::i;1644:108:44:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1644:108:44;;;;;;;;:::i;:::-;;1899:234;;;;;;;;;;;;;;;;-1:-1:-1;1899:234:44;-1:-1:-1;;;;;1899:234:44;;:::i;3438:119:11:-;;;;;;;;;;;;;;;;-1:-1:-1;3438:119:11;-1:-1:-1;;;;;3438:119:11;;:::i;2402:87::-;;;:::i;6408:269::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6408:269:11;;;;;;;;:::i;3770:175::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3770:175:11;;;;;;;;:::i;2297:307:44:-;;;;;;;;;;;;;;;;-1:-1:-1;2297:307:44;-1:-1:-1;;;;;2297:307:44;;:::i;4008:151:11:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4008:151:11;;;;;;;;;;:::i;2200:83::-;2270:5;2263:12;;;;;;;;-1:-1:-1;;2263:12:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2237:13;;2263:12;;2270:5;;2263:12;;2270:5;2263:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:83;:::o;4306:169::-;4389:4;4406:39;4415:12;:10;:12::i;:::-;4429:7;4438:6;4406:8;:39::i;:::-;-1:-1:-1;4463:4:11;4306:169;;;;:::o;3275:100::-;3355:12;;3275:100;:::o;1154:106:44:-;-1:-1:-1;;;;;1235:17:44;1211:4;1235:17;;;:14;:17;;;;;;;;;1154:106::o;4957:321:11:-;5063:4;5080:36;5090:6;5098:9;5109:6;5080:9;:36::i;:::-;5127:121;5136:6;5144:12;:10;:12::i;:::-;5158:89;5196:6;5158:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5158:19:11;;;;;;:11;:19;;;;;;5178:12;:10;:12::i;:::-;-1:-1:-1;;;;;5158:33:11;;;;;;;;;;;;-1:-1:-1;5158:33:11;;;:89;:37;:89::i;:::-;5127:8;:121::i;:::-;-1:-1:-1;5266:4:11;4957:321;;;;;:::o;3127:83::-;3193:9;;;;3127:83;:::o;579:75:13:-;642:4;;579:75;:::o;5687:218:11:-;5775:4;5792:83;5801:12;:10;:12::i;:::-;5815:7;5824:50;5863:10;5824:11;:25;5836:12;:10;:12::i;:::-;-1:-1:-1;;;;;5824:25:11;;;;;;;;;;;;;;;;;-1:-1:-1;5824:25:11;;;:34;;;;;;;;;;;:38;:50::i;1644:108:44:-;1383:27;1399:10;1383:15;:27::i;:::-;1375:62;;;;;-1:-1:-1;;;1375:62:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;1722:22:::1;1728:7;1737:6;1722:5;:22::i;:::-;1644:108:::0;;:::o;1899:234::-;1383:27;1399:10;1383:15;:27::i;:::-;1375:62;;;;;-1:-1:-1;;;1375:62:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;1976:18:::1;1992:1;1976:15;:18::i;:::-;1975:19;1967:58;;;::::0;;-1:-1:-1;;;1967:58:44;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;2036:17:44;::::1;;::::0;;;:14:::1;:17;::::0;;;;:24;;-1:-1:-1;;2036:24:44::1;2056:4;2036:24:::0;;::::1;::::0;;;2104:17:::1;::::0;2091:34:::1;::::0;:12:::1;:34::i;:::-;2071:17;:54:::0;-1:-1:-1;1899:234:44:o;3438:119:11:-;-1:-1:-1;;;;;3531:18:11;3504:7;3531:18;;;;;;;;;;;;3438:119::o;2402:87::-;2474:7;2467:14;;;;;;;;-1:-1:-1;;2467:14:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:13;;2467:14;;2474:7;;2467:14;;2474:7;2467:14;;;;;;;;;;;;;;;;;;;;;;;;6408:269;6501:4;6518:129;6527:12;:10;:12::i;:::-;6541:7;6550:96;6589:15;6550:96;;;;;;;;;;;;;;;;;:11;:25;6562:12;:10;:12::i;:::-;-1:-1:-1;;;;;6550:25:11;;;;;;;;;;;;;;;;;-1:-1:-1;6550:25:11;;;:34;;;;;;;;;;;:96;:38;:96::i;3770:175::-;3856:4;3873:42;3883:12;:10;:12::i;:::-;3897:9;3908:6;3873:9;:42::i;2297:307:44:-;1383:27;1399:10;1383:15;:27::i;:::-;1375:62;;;;;-1:-1:-1;;;1375:62:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;2376:18:::1;2392:1;2376:15;:18::i;:::-;2368:53;;;::::0;;-1:-1:-1;;;2368:53:44;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;2460:1;2440:17;;:21;2432:63;;;::::0;;-1:-1:-1;;;2432:63:44;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;2506:17:44;::::1;2526:5;2506:17:::0;;;:14:::1;:17;::::0;;;;:25;;-1:-1:-1;;2506:25:44::1;::::0;;2575:17:::1;::::0;2562:34:::1;::::0;2506:25;2562:12:::1;:34::i;4008:151:11:-:0;-1:-1:-1;;;;;4124:18:11;;;4097:7;4124:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4008:151::o;605:106:5:-;693:10;605:106;:::o;9555:346:11:-;-1:-1:-1;;;;;9657:19:11;;9649:68;;;;-1:-1:-1;;;9649:68:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9736:21:11;;9728:68;;;;-1:-1:-1;;;9728:68:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9809:18:11;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9861:32;;;;;;;;;;;;;;;;;9555:346;;;:::o;7167:539::-;-1:-1:-1;;;;;7273:20:11;;7265:70;;;;-1:-1:-1;;;7265:70:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7354:23:11;;7346:71;;;;-1:-1:-1;;;7346:71:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7430:47;7451:6;7459:9;7470:6;7430:20;:47::i;:::-;7510:71;7532:6;7510:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7510:17:11;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7490:17:11;;;:9;:17;;;;;;;;;;;:91;;;;7615:20;;;;;;;:32;;7640:6;7615:24;:32::i;:::-;-1:-1:-1;;;;;7592:20:11;;;:9;:20;;;;;;;;;;;;:55;;;;7663:35;;;;;;;7592:20;;7663:35;;;;;;;;;;;;;7167:539;;;:::o;1805:192:39:-;1891:7;1927:12;1919:6;;;;1911:29;;;;-1:-1:-1;;;1911:29:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1963:5:39;;;1805:192::o;902:181::-;960:7;992:5;;;1016:6;;;;1008:46;;;;;-1:-1:-1;;;1008:46:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:1;902:181;-1:-1:-1;;;902:181:39:o;7988:378:11:-;-1:-1:-1;;;;;8072:21:11;;8064:65;;;;;-1:-1:-1;;;8064:65:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;8142:49;8171:1;8175:7;8184:6;8142:20;:49::i;:::-;8219:12;;:24;;8236:6;8219:16;:24::i;:::-;8204:12;:39;-1:-1:-1;;;;;8275:18:11;;:9;:18;;;;;;;;;;;:30;;8298:6;8275:22;:30::i;:::-;-1:-1:-1;;;;;8254:18:11;;:9;:18;;;;;;;;;;;:51;;;;8321:37;;;;;;;8254:18;;:9;;8321:37;;;;;;;;;;7988:378;;:::o;1366:136:39:-;1424:7;1451:43;1455:1;1458;1451:43;;;;;;;;;;;;;;;;;:3;:43::i;841:315:13:-;950:44;977:4;983:2;987:6;950:26;:44::i;:::-;-1:-1:-1;;;;;1011:18:13;;1007:142;;1103:4;;1093:6;1077:13;:11;:13::i;:::-;:22;:30;;1069:68;;;;;-1:-1:-1;;;1069:68:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;841:315;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\nimport \"./ERC20Capped.sol\";\r\n\r\n/** @title Extension of {ERC20} that adds a cap to the supply of tokens. */\r\ncontract WebaverseERC20 is ERC20Capped {\r\n    mapping(address => bool) internal allowedMinters; // whether anyone can mint tokens (should be sidechain only)\r\n    uint256 internal numAllowedMinters;\r\n\r\n    /**\r\n     * @dev Create a new fungible token\r\n     * @param name Name of the token (default is FT)\r\n     * @param symbol Token identifier (default is SILK)\r\n     * @param cap Sets the token market cap. This value is immutable, it can only be\r\n     * set once during construction.\r\n     * Default cap: 2147483648000000000000000000 or (2**31) + '000000000000000000'\r\n     */\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        uint256 cap\r\n    ) public ERC20(name, symbol) ERC20Capped(cap) {\r\n        allowedMinters[msg.sender] = true;\r\n        numAllowedMinters = 1;\r\n    }\r\n\r\n    /**\r\n     * @dev Test if an address is allowed to mint ERC20 tokens\r\n     * @param a address to test\r\n     * @return true if address is allowed to mint\r\n     */\r\n    function isAllowedMinter(address a) public view returns (bool) {\r\n        return allowedMinters[a];\r\n    }\r\n\r\n    /** @dev Modify functions to ensure only allowed minters can mint */\r\n    modifier onlyMinter() {\r\n        require(isAllowedMinter(msg.sender), \"sender is not a minter\");\r\n        _; // Inject modified function\r\n    }\r\n\r\n    /**\r\n     * @dev Mint ERC20 tokens\r\n     * @param account Tokens created for this account\r\n     * @param amount Number of tokens to mint\r\n     */\r\n    function mint(address account, uint256 amount) public onlyMinter() {\r\n        _mint(account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Add an account to the list of accounts allowed to create ERC20 tokens\r\n     * @param a address to whitelist\r\n     */\r\n    function addAllowedMinter(address a) public onlyMinter() {\r\n        require(!isAllowedMinter(a), \"target is already a minter\");\r\n        allowedMinters[a] = true;\r\n        numAllowedMinters = SafeMath.add(numAllowedMinters, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Remove an account from the list of accounts allowed to create ERC20 tokens\r\n     * @param a address to remove from whitelist\r\n     */\r\n    function removeAllowedMinter(address a) public onlyMinter() {\r\n        require(isAllowedMinter(a), \"target is not a minter\");\r\n        require(numAllowedMinters > 1, \"cannot remove the only minter\");\r\n        allowedMinters[a] = false;\r\n        numAllowedMinters = SafeMath.sub(numAllowedMinters, 1);\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\Project\\webaverse - 19\\smart contract\\contracts\\ethereum\\WebaverseERC20.sol",
  "ast": {
    "absolutePath": "project:/ethereum/WebaverseERC20.sol",
    "exportedSymbols": {
      "WebaverseERC20": [
        6752
      ]
    },
    "id": 6753,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6602,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:44"
      },
      {
        "absolutePath": "project:/ethereum/ERC20Capped.sol",
        "file": "./ERC20Capped.sol",
        "id": 6603,
        "nodeType": "ImportDirective",
        "scope": 6753,
        "sourceUnit": 1893,
        "src": "60:27:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6605,
              "name": "ERC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1892,
              "src": "195:11:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Capped_$1892",
                "typeString": "contract ERC20Capped"
              }
            },
            "id": 6606,
            "nodeType": "InheritanceSpecifier",
            "src": "195:11:44"
          }
        ],
        "contractDependencies": [
          810,
          1762,
          1892,
          4669
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6604,
          "nodeType": "StructuredDocumentation",
          "src": "91:75:44",
          "text": "@title Extension of {ERC20} that adds a cap to the supply of tokens. "
        },
        "fullyImplemented": true,
        "id": 6752,
        "linearizedBaseContracts": [
          6752,
          1892,
          1762,
          4669,
          810
        ],
        "name": "WebaverseERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6610,
            "mutability": "mutable",
            "name": "allowedMinters",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6752,
            "src": "214:48:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 6609,
              "keyType": {
                "id": 6607,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "222:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "214:24:44",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 6608,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "233:4:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6612,
            "mutability": "mutable",
            "name": "numAllowedMinters",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6752,
            "src": "330:34:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6611,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "330:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6640,
              "nodeType": "Block",
              "src": "896:84:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6629,
                        "name": "allowedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6610,
                        "src": "907:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 6632,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6630,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "922:3:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "922:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "907:26:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 6633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "936:4:44",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "907:33:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6635,
                  "nodeType": "ExpressionStatement",
                  "src": "907:33:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6636,
                      "name": "numAllowedMinters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6612,
                      "src": "951:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 6637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "971:1:44",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "951:21:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6639,
                  "nodeType": "ExpressionStatement",
                  "src": "951:21:44"
                }
              ]
            },
            "documentation": {
              "id": 6613,
              "nodeType": "StructuredDocumentation",
              "src": "373:372:44",
              "text": " @dev Create a new fungible token\n @param name Name of the token (default is FT)\n @param symbol Token identifier (default is SILK)\n @param cap Sets the token market cap. This value is immutable, it can only be\n set once during construction.\n Default cap: 2147483648000000000000000000 or (2**31) + '000000000000000000'"
            },
            "id": 6641,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6622,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6615,
                    "src": "865:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6623,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6617,
                    "src": "871:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 6624,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6621,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1762,
                  "src": "859:5:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1762_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "859:19:44"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6626,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6619,
                    "src": "891:3:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 6627,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6625,
                  "name": "ERC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1892,
                  "src": "879:11:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$1892_$",
                    "typeString": "type(contract ERC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "879:16:44"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6615,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6641,
                  "src": "773:18:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6614,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6617,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6641,
                  "src": "802:20:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6616,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6619,
                  "mutability": "mutable",
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6641,
                  "src": "833:11:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "833:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "762:89:44"
            },
            "returnParameters": {
              "id": 6628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "896:0:44"
            },
            "scope": 6752,
            "src": "751:229:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6653,
              "nodeType": "Block",
              "src": "1217:43:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 6649,
                      "name": "allowedMinters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6610,
                      "src": "1235:14:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 6651,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 6650,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6644,
                      "src": "1250:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1235:17:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6648,
                  "id": 6652,
                  "nodeType": "Return",
                  "src": "1228:24:44"
                }
              ]
            },
            "documentation": {
              "id": 6642,
              "nodeType": "StructuredDocumentation",
              "src": "988:160:44",
              "text": " @dev Test if an address is allowed to mint ERC20 tokens\n @param a address to test\n @return true if address is allowed to mint"
            },
            "functionSelector": "1f3b4c90",
            "id": 6654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6644,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6654,
                  "src": "1179:9:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1178:11:44"
            },
            "returnParameters": {
              "id": 6648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6647,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6654,
                  "src": "1211:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6646,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1210:6:44"
            },
            "scope": 6752,
            "src": "1154:106:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6666,
              "nodeType": "Block",
              "src": "1364:121:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6659,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1399:3:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1399:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 6658,
                          "name": "isAllowedMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6654,
                          "src": "1383:15:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 6661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1383:27:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e646572206973206e6f742061206d696e746572",
                        "id": 6662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1412:24:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36a7265fec395e681681eb6551fa849872c54da669e453b371648e07a8238958",
                          "typeString": "literal_string \"sender is not a minter\""
                        },
                        "value": "sender is not a minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36a7265fec395e681681eb6551fa849872c54da669e453b371648e07a8238958",
                          "typeString": "literal_string \"sender is not a minter\""
                        }
                      ],
                      "id": 6657,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1375:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1375:62:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6664,
                  "nodeType": "ExpressionStatement",
                  "src": "1375:62:44"
                },
                {
                  "id": 6665,
                  "nodeType": "PlaceholderStatement",
                  "src": "1448:1:44"
                }
              ]
            },
            "documentation": {
              "id": 6655,
              "nodeType": "StructuredDocumentation",
              "src": "1268:68:44",
              "text": "@dev Modify functions to ensure only allowed minters can mint "
            },
            "id": 6667,
            "name": "onlyMinter",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 6656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1361:2:44"
            },
            "src": "1342:143:44",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6682,
              "nodeType": "Block",
              "src": "1711:41:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6678,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6670,
                        "src": "1728:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6679,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6672,
                        "src": "1737:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6677,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1638,
                      "src": "1722:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1722:22:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6681,
                  "nodeType": "ExpressionStatement",
                  "src": "1722:22:44"
                }
              ]
            },
            "documentation": {
              "id": 6668,
              "nodeType": "StructuredDocumentation",
              "src": "1493:145:44",
              "text": " @dev Mint ERC20 tokens\n @param account Tokens created for this account\n @param amount Number of tokens to mint"
            },
            "functionSelector": "40c10f19",
            "id": 6683,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6675,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6674,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6667,
                  "src": "1698:10:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1698:12:44"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6670,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6683,
                  "src": "1658:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6672,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6683,
                  "src": "1675:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1657:33:44"
            },
            "returnParameters": {
              "id": 6676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1711:0:44"
            },
            "scope": 6752,
            "src": "1644:108:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6713,
              "nodeType": "Block",
              "src": "1956:177:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1975:19:44",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 6693,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6686,
                              "src": "1992:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6692,
                            "name": "isAllowedMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6654,
                            "src": "1976:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 6694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1976:18:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74617267657420697320616c72656164792061206d696e746572",
                        "id": 6696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1996:28:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02dde13d2218b1919576ffa7f0dd565114c9761f0cd874f38ee5904ef068f9dc",
                          "typeString": "literal_string \"target is already a minter\""
                        },
                        "value": "target is already a minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02dde13d2218b1919576ffa7f0dd565114c9761f0cd874f38ee5904ef068f9dc",
                          "typeString": "literal_string \"target is already a minter\""
                        }
                      ],
                      "id": 6691,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1967:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1967:58:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6698,
                  "nodeType": "ExpressionStatement",
                  "src": "1967:58:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6699,
                        "name": "allowedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6610,
                        "src": "2036:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 6701,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6700,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6686,
                        "src": "2051:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2036:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 6702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2056:4:44",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2036:24:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6704,
                  "nodeType": "ExpressionStatement",
                  "src": "2036:24:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6705,
                      "name": "numAllowedMinters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6612,
                      "src": "2071:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6708,
                          "name": "numAllowedMinters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6612,
                          "src": "2104:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 6709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2123:1:44",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 6706,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6151,
                          "src": "2091:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$6151_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 6707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5984,
                        "src": "2091:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2091:34:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2071:54:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6712,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:54:44"
                }
              ]
            },
            "documentation": {
              "id": 6684,
              "nodeType": "StructuredDocumentation",
              "src": "1760:133:44",
              "text": " @dev Add an account to the list of accounts allowed to create ERC20 tokens\n @param a address to whitelist"
            },
            "functionSelector": "488603df",
            "id": 6714,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6689,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6688,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6667,
                  "src": "1943:10:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1943:12:44"
              }
            ],
            "name": "addAllowedMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6686,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6714,
                  "src": "1925:9:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1925:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1924:11:44"
            },
            "returnParameters": {
              "id": 6690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1956:0:44"
            },
            "scope": 6752,
            "src": "1899:234:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6750,
              "nodeType": "Block",
              "src": "2357:247:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6724,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6717,
                            "src": "2392:1:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6723,
                          "name": "isAllowedMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6654,
                          "src": "2376:15:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 6725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2376:18:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746172676574206973206e6f742061206d696e746572",
                        "id": 6726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2396:24:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e55f897e5b18009ee667ac69e60431171d66392106e763c82d8299a807b3a2eb",
                          "typeString": "literal_string \"target is not a minter\""
                        },
                        "value": "target is not a minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e55f897e5b18009ee667ac69e60431171d66392106e763c82d8299a807b3a2eb",
                          "typeString": "literal_string \"target is not a minter\""
                        }
                      ],
                      "id": 6722,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2368:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2368:53:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6728,
                  "nodeType": "ExpressionStatement",
                  "src": "2368:53:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6730,
                          "name": "numAllowedMinters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6612,
                          "src": "2440:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 6731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2460:1:44",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2440:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e6e6f742072656d6f766520746865206f6e6c79206d696e746572",
                        "id": 6733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2463:31:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e67df283d085fe967bccd3fdcb7212d2640f54d438429ddaafd80de600c8f7d5",
                          "typeString": "literal_string \"cannot remove the only minter\""
                        },
                        "value": "cannot remove the only minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e67df283d085fe967bccd3fdcb7212d2640f54d438429ddaafd80de600c8f7d5",
                          "typeString": "literal_string \"cannot remove the only minter\""
                        }
                      ],
                      "id": 6729,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2432:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2432:63:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6735,
                  "nodeType": "ExpressionStatement",
                  "src": "2432:63:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6736,
                        "name": "allowedMinters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6610,
                        "src": "2506:14:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 6738,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6737,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6717,
                        "src": "2521:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2506:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 6739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2526:5:44",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2506:25:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6741,
                  "nodeType": "ExpressionStatement",
                  "src": "2506:25:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6742,
                      "name": "numAllowedMinters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6612,
                      "src": "2542:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6745,
                          "name": "numAllowedMinters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6612,
                          "src": "2575:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 6746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2594:1:44",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 6743,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6151,
                          "src": "2562:8:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$6151_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 6744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6001,
                        "src": "2562:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2562:34:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2542:54:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6749,
                  "nodeType": "ExpressionStatement",
                  "src": "2542:54:44"
                }
              ]
            },
            "documentation": {
              "id": 6715,
              "nodeType": "StructuredDocumentation",
              "src": "2141:150:44",
              "text": " @dev Remove an account from the list of accounts allowed to create ERC20 tokens\n @param a address to remove from whitelist"
            },
            "functionSelector": "bad39b96",
            "id": 6751,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6720,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6719,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6667,
                  "src": "2344:10:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2344:12:44"
              }
            ],
            "name": "removeAllowedMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6717,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6751,
                  "src": "2326:9:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2326:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2325:11:44"
            },
            "returnParameters": {
              "id": 6721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2357:0:44"
            },
            "scope": 6752,
            "src": "2297:307:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6753,
        "src": "168:2439:44"
      }
    ],
    "src": "33:2576:44"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/ethereum/WebaverseERC20.sol",
      "exportedSymbols": {
        "WebaverseERC20": [
          6752
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ]
        },
        "id": 6602,
        "name": "PragmaDirective",
        "src": "33:23:44"
      },
      {
        "attributes": {
          "SourceUnit": 1893,
          "absolutePath": "project:/ethereum/ERC20Capped.sol",
          "file": "./ERC20Capped.sol",
          "scope": 6753,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6603,
        "name": "ImportDirective",
        "src": "60:27:44"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            810,
            1762,
            1892,
            4669
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6752,
            1892,
            1762,
            4669,
            810
          ],
          "name": "WebaverseERC20",
          "scope": 6753
        },
        "children": [
          {
            "attributes": {
              "text": "@title Extension of {ERC20} that adds a cap to the supply of tokens. "
            },
            "id": 6604,
            "name": "StructuredDocumentation",
            "src": "91:75:44"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Capped",
                  "referencedDeclaration": 1892,
                  "type": "contract ERC20Capped"
                },
                "id": 6605,
                "name": "UserDefinedTypeName",
                "src": "195:11:44"
              }
            ],
            "id": 6606,
            "name": "InheritanceSpecifier",
            "src": "195:11:44"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "allowedMinters",
              "overrides": null,
              "scope": 6752,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 6607,
                    "name": "ElementaryTypeName",
                    "src": "222:7:44"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 6608,
                    "name": "ElementaryTypeName",
                    "src": "233:4:44"
                  }
                ],
                "id": 6609,
                "name": "Mapping",
                "src": "214:24:44"
              }
            ],
            "id": 6610,
            "name": "VariableDeclaration",
            "src": "214:48:44"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "numAllowedMinters",
              "overrides": null,
              "scope": 6752,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 6611,
                "name": "ElementaryTypeName",
                "src": "330:7:44"
              }
            ],
            "id": 6612,
            "name": "VariableDeclaration",
            "src": "330:34:44"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 6752,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Create a new fungible token\n @param name Name of the token (default is FT)\n @param symbol Token identifier (default is SILK)\n @param cap Sets the token market cap. This value is immutable, it can only be\n set once during construction.\n Default cap: 2147483648000000000000000000 or (2**31) + '000000000000000000'"
                },
                "id": 6613,
                "name": "StructuredDocumentation",
                "src": "373:372:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "name",
                      "overrides": null,
                      "scope": 6641,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6614,
                        "name": "ElementaryTypeName",
                        "src": "773:6:44"
                      }
                    ],
                    "id": 6615,
                    "name": "VariableDeclaration",
                    "src": "773:18:44"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "symbol",
                      "overrides": null,
                      "scope": 6641,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6616,
                        "name": "ElementaryTypeName",
                        "src": "802:6:44"
                      }
                    ],
                    "id": 6617,
                    "name": "VariableDeclaration",
                    "src": "802:20:44"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "cap",
                      "overrides": null,
                      "scope": 6641,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 6618,
                        "name": "ElementaryTypeName",
                        "src": "833:7:44"
                      }
                    ],
                    "id": 6619,
                    "name": "VariableDeclaration",
                    "src": "833:11:44"
                  }
                ],
                "id": 6620,
                "name": "ParameterList",
                "src": "762:89:44"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6628,
                "name": "ParameterList",
                "src": "896:0:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1762,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 6621,
                    "name": "Identifier",
                    "src": "859:5:44"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6615,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 6622,
                    "name": "Identifier",
                    "src": "865:4:44"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6617,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 6623,
                    "name": "Identifier",
                    "src": "871:6:44"
                  }
                ],
                "id": 6624,
                "name": "ModifierInvocation",
                "src": "859:19:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1892,
                      "type": "type(contract ERC20Capped)",
                      "value": "ERC20Capped"
                    },
                    "id": 6625,
                    "name": "Identifier",
                    "src": "879:11:44"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6619,
                      "type": "uint256",
                      "value": "cap"
                    },
                    "id": 6626,
                    "name": "Identifier",
                    "src": "891:3:44"
                  }
                ],
                "id": 6627,
                "name": "ModifierInvocation",
                "src": "879:16:44"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6610,
                                  "type": "mapping(address => bool)",
                                  "value": "allowedMinters"
                                },
                                "id": 6629,
                                "name": "Identifier",
                                "src": "907:14:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 6630,
                                    "name": "Identifier",
                                    "src": "922:3:44"
                                  }
                                ],
                                "id": 6631,
                                "name": "MemberAccess",
                                "src": "922:10:44"
                              }
                            ],
                            "id": 6632,
                            "name": "IndexAccess",
                            "src": "907:26:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 6633,
                            "name": "Literal",
                            "src": "936:4:44"
                          }
                        ],
                        "id": 6634,
                        "name": "Assignment",
                        "src": "907:33:44"
                      }
                    ],
                    "id": 6635,
                    "name": "ExpressionStatement",
                    "src": "907:33:44"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6612,
                              "type": "uint256",
                              "value": "numAllowedMinters"
                            },
                            "id": 6636,
                            "name": "Identifier",
                            "src": "951:17:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 6637,
                            "name": "Literal",
                            "src": "971:1:44"
                          }
                        ],
                        "id": 6638,
                        "name": "Assignment",
                        "src": "951:21:44"
                      }
                    ],
                    "id": 6639,
                    "name": "ExpressionStatement",
                    "src": "951:21:44"
                  }
                ],
                "id": 6640,
                "name": "Block",
                "src": "896:84:44"
              }
            ],
            "id": 6641,
            "name": "FunctionDefinition",
            "src": "751:229:44"
          },
          {
            "attributes": {
              "functionSelector": "1f3b4c90",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "isAllowedMinter",
              "overrides": null,
              "scope": 6752,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Test if an address is allowed to mint ERC20 tokens\n @param a address to test\n @return true if address is allowed to mint"
                },
                "id": 6642,
                "name": "StructuredDocumentation",
                "src": "988:160:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "a",
                      "overrides": null,
                      "scope": 6654,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6643,
                        "name": "ElementaryTypeName",
                        "src": "1179:7:44"
                      }
                    ],
                    "id": 6644,
                    "name": "VariableDeclaration",
                    "src": "1179:9:44"
                  }
                ],
                "id": 6645,
                "name": "ParameterList",
                "src": "1178:11:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 6654,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 6646,
                        "name": "ElementaryTypeName",
                        "src": "1211:4:44"
                      }
                    ],
                    "id": 6647,
                    "name": "VariableDeclaration",
                    "src": "1211:4:44"
                  }
                ],
                "id": 6648,
                "name": "ParameterList",
                "src": "1210:6:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 6648
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6610,
                              "type": "mapping(address => bool)",
                              "value": "allowedMinters"
                            },
                            "id": 6649,
                            "name": "Identifier",
                            "src": "1235:14:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6644,
                              "type": "address",
                              "value": "a"
                            },
                            "id": 6650,
                            "name": "Identifier",
                            "src": "1250:1:44"
                          }
                        ],
                        "id": 6651,
                        "name": "IndexAccess",
                        "src": "1235:17:44"
                      }
                    ],
                    "id": 6652,
                    "name": "Return",
                    "src": "1228:24:44"
                  }
                ],
                "id": 6653,
                "name": "Block",
                "src": "1217:43:44"
              }
            ],
            "id": 6654,
            "name": "FunctionDefinition",
            "src": "1154:106:44"
          },
          {
            "attributes": {
              "name": "onlyMinter",
              "overrides": null,
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": "@dev Modify functions to ensure only allowed minters can mint "
                },
                "id": 6655,
                "name": "StructuredDocumentation",
                "src": "1268:68:44"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6656,
                "name": "ParameterList",
                "src": "1361:2:44"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_36a7265fec395e681681eb6551fa849872c54da669e453b371648e07a8238958",
                                  "typeString": "literal_string \"sender is not a minter\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6657,
                            "name": "Identifier",
                            "src": "1375:7:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6654,
                                  "type": "function (address) view returns (bool)",
                                  "value": "isAllowedMinter"
                                },
                                "id": 6658,
                                "name": "Identifier",
                                "src": "1383:15:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 6659,
                                    "name": "Identifier",
                                    "src": "1399:3:44"
                                  }
                                ],
                                "id": 6660,
                                "name": "MemberAccess",
                                "src": "1399:10:44"
                              }
                            ],
                            "id": 6661,
                            "name": "FunctionCall",
                            "src": "1383:27:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "73656e646572206973206e6f742061206d696e746572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"sender is not a minter\"",
                              "value": "sender is not a minter"
                            },
                            "id": 6662,
                            "name": "Literal",
                            "src": "1412:24:44"
                          }
                        ],
                        "id": 6663,
                        "name": "FunctionCall",
                        "src": "1375:62:44"
                      }
                    ],
                    "id": 6664,
                    "name": "ExpressionStatement",
                    "src": "1375:62:44"
                  },
                  {
                    "id": 6665,
                    "name": "PlaceholderStatement",
                    "src": "1448:1:44"
                  }
                ],
                "id": 6666,
                "name": "Block",
                "src": "1364:121:44"
              }
            ],
            "id": 6667,
            "name": "ModifierDefinition",
            "src": "1342:143:44"
          },
          {
            "attributes": {
              "functionSelector": "40c10f19",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mint",
              "overrides": null,
              "scope": 6752,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Mint ERC20 tokens\n @param account Tokens created for this account\n @param amount Number of tokens to mint"
                },
                "id": 6668,
                "name": "StructuredDocumentation",
                "src": "1493:145:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "account",
                      "overrides": null,
                      "scope": 6683,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6669,
                        "name": "ElementaryTypeName",
                        "src": "1658:7:44"
                      }
                    ],
                    "id": 6670,
                    "name": "VariableDeclaration",
                    "src": "1658:15:44"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "overrides": null,
                      "scope": 6683,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 6671,
                        "name": "ElementaryTypeName",
                        "src": "1675:7:44"
                      }
                    ],
                    "id": 6672,
                    "name": "VariableDeclaration",
                    "src": "1675:14:44"
                  }
                ],
                "id": 6673,
                "name": "ParameterList",
                "src": "1657:33:44"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6676,
                "name": "ParameterList",
                "src": "1711:0:44"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6667,
                      "type": "modifier ()",
                      "value": "onlyMinter"
                    },
                    "id": 6674,
                    "name": "Identifier",
                    "src": "1698:10:44"
                  }
                ],
                "id": 6675,
                "name": "ModifierInvocation",
                "src": "1698:12:44"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1638,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 6677,
                            "name": "Identifier",
                            "src": "1722:5:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6670,
                              "type": "address",
                              "value": "account"
                            },
                            "id": 6678,
                            "name": "Identifier",
                            "src": "1728:7:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6672,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 6679,
                            "name": "Identifier",
                            "src": "1737:6:44"
                          }
                        ],
                        "id": 6680,
                        "name": "FunctionCall",
                        "src": "1722:22:44"
                      }
                    ],
                    "id": 6681,
                    "name": "ExpressionStatement",
                    "src": "1722:22:44"
                  }
                ],
                "id": 6682,
                "name": "Block",
                "src": "1711:41:44"
              }
            ],
            "id": 6683,
            "name": "FunctionDefinition",
            "src": "1644:108:44"
          },
          {
            "attributes": {
              "functionSelector": "488603df",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "addAllowedMinter",
              "overrides": null,
              "scope": 6752,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Add an account to the list of accounts allowed to create ERC20 tokens\n @param a address to whitelist"
                },
                "id": 6684,
                "name": "StructuredDocumentation",
                "src": "1760:133:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "a",
                      "overrides": null,
                      "scope": 6714,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6685,
                        "name": "ElementaryTypeName",
                        "src": "1925:7:44"
                      }
                    ],
                    "id": 6686,
                    "name": "VariableDeclaration",
                    "src": "1925:9:44"
                  }
                ],
                "id": 6687,
                "name": "ParameterList",
                "src": "1924:11:44"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6690,
                "name": "ParameterList",
                "src": "1956:0:44"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6667,
                      "type": "modifier ()",
                      "value": "onlyMinter"
                    },
                    "id": 6688,
                    "name": "Identifier",
                    "src": "1943:10:44"
                  }
                ],
                "id": 6689,
                "name": "ModifierInvocation",
                "src": "1943:12:44"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_02dde13d2218b1919576ffa7f0dd565114c9761f0cd874f38ee5904ef068f9dc",
                                  "typeString": "literal_string \"target is already a minter\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6691,
                            "name": "Identifier",
                            "src": "1967:7:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6654,
                                      "type": "function (address) view returns (bool)",
                                      "value": "isAllowedMinter"
                                    },
                                    "id": 6692,
                                    "name": "Identifier",
                                    "src": "1976:15:44"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6686,
                                      "type": "address",
                                      "value": "a"
                                    },
                                    "id": 6693,
                                    "name": "Identifier",
                                    "src": "1992:1:44"
                                  }
                                ],
                                "id": 6694,
                                "name": "FunctionCall",
                                "src": "1976:18:44"
                              }
                            ],
                            "id": 6695,
                            "name": "UnaryOperation",
                            "src": "1975:19:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74617267657420697320616c72656164792061206d696e746572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"target is already a minter\"",
                              "value": "target is already a minter"
                            },
                            "id": 6696,
                            "name": "Literal",
                            "src": "1996:28:44"
                          }
                        ],
                        "id": 6697,
                        "name": "FunctionCall",
                        "src": "1967:58:44"
                      }
                    ],
                    "id": 6698,
                    "name": "ExpressionStatement",
                    "src": "1967:58:44"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6610,
                                  "type": "mapping(address => bool)",
                                  "value": "allowedMinters"
                                },
                                "id": 6699,
                                "name": "Identifier",
                                "src": "2036:14:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6686,
                                  "type": "address",
                                  "value": "a"
                                },
                                "id": 6700,
                                "name": "Identifier",
                                "src": "2051:1:44"
                              }
                            ],
                            "id": 6701,
                            "name": "IndexAccess",
                            "src": "2036:17:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 6702,
                            "name": "Literal",
                            "src": "2056:4:44"
                          }
                        ],
                        "id": 6703,
                        "name": "Assignment",
                        "src": "2036:24:44"
                      }
                    ],
                    "id": 6704,
                    "name": "ExpressionStatement",
                    "src": "2036:24:44"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6612,
                              "type": "uint256",
                              "value": "numAllowedMinters"
                            },
                            "id": 6705,
                            "name": "Identifier",
                            "src": "2071:17:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 5984,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6151,
                                      "type": "type(library SafeMath)",
                                      "value": "SafeMath"
                                    },
                                    "id": 6706,
                                    "name": "Identifier",
                                    "src": "2091:8:44"
                                  }
                                ],
                                "id": 6707,
                                "name": "MemberAccess",
                                "src": "2091:12:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6612,
                                  "type": "uint256",
                                  "value": "numAllowedMinters"
                                },
                                "id": 6708,
                                "name": "Identifier",
                                "src": "2104:17:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 6709,
                                "name": "Literal",
                                "src": "2123:1:44"
                              }
                            ],
                            "id": 6710,
                            "name": "FunctionCall",
                            "src": "2091:34:44"
                          }
                        ],
                        "id": 6711,
                        "name": "Assignment",
                        "src": "2071:54:44"
                      }
                    ],
                    "id": 6712,
                    "name": "ExpressionStatement",
                    "src": "2071:54:44"
                  }
                ],
                "id": 6713,
                "name": "Block",
                "src": "1956:177:44"
              }
            ],
            "id": 6714,
            "name": "FunctionDefinition",
            "src": "1899:234:44"
          },
          {
            "attributes": {
              "functionSelector": "bad39b96",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "removeAllowedMinter",
              "overrides": null,
              "scope": 6752,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Remove an account from the list of accounts allowed to create ERC20 tokens\n @param a address to remove from whitelist"
                },
                "id": 6715,
                "name": "StructuredDocumentation",
                "src": "2141:150:44"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "a",
                      "overrides": null,
                      "scope": 6751,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6716,
                        "name": "ElementaryTypeName",
                        "src": "2326:7:44"
                      }
                    ],
                    "id": 6717,
                    "name": "VariableDeclaration",
                    "src": "2326:9:44"
                  }
                ],
                "id": 6718,
                "name": "ParameterList",
                "src": "2325:11:44"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6721,
                "name": "ParameterList",
                "src": "2357:0:44"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6667,
                      "type": "modifier ()",
                      "value": "onlyMinter"
                    },
                    "id": 6719,
                    "name": "Identifier",
                    "src": "2344:10:44"
                  }
                ],
                "id": 6720,
                "name": "ModifierInvocation",
                "src": "2344:12:44"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e55f897e5b18009ee667ac69e60431171d66392106e763c82d8299a807b3a2eb",
                                  "typeString": "literal_string \"target is not a minter\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6722,
                            "name": "Identifier",
                            "src": "2368:7:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6654,
                                  "type": "function (address) view returns (bool)",
                                  "value": "isAllowedMinter"
                                },
                                "id": 6723,
                                "name": "Identifier",
                                "src": "2376:15:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6717,
                                  "type": "address",
                                  "value": "a"
                                },
                                "id": 6724,
                                "name": "Identifier",
                                "src": "2392:1:44"
                              }
                            ],
                            "id": 6725,
                            "name": "FunctionCall",
                            "src": "2376:18:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "746172676574206973206e6f742061206d696e746572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"target is not a minter\"",
                              "value": "target is not a minter"
                            },
                            "id": 6726,
                            "name": "Literal",
                            "src": "2396:24:44"
                          }
                        ],
                        "id": 6727,
                        "name": "FunctionCall",
                        "src": "2368:53:44"
                      }
                    ],
                    "id": 6728,
                    "name": "ExpressionStatement",
                    "src": "2368:53:44"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e67df283d085fe967bccd3fdcb7212d2640f54d438429ddaafd80de600c8f7d5",
                                  "typeString": "literal_string \"cannot remove the only minter\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6729,
                            "name": "Identifier",
                            "src": "2432:7:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6612,
                                  "type": "uint256",
                                  "value": "numAllowedMinters"
                                },
                                "id": 6730,
                                "name": "Identifier",
                                "src": "2440:17:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 6731,
                                "name": "Literal",
                                "src": "2460:1:44"
                              }
                            ],
                            "id": 6732,
                            "name": "BinaryOperation",
                            "src": "2440:21:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "63616e6e6f742072656d6f766520746865206f6e6c79206d696e746572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"cannot remove the only minter\"",
                              "value": "cannot remove the only minter"
                            },
                            "id": 6733,
                            "name": "Literal",
                            "src": "2463:31:44"
                          }
                        ],
                        "id": 6734,
                        "name": "FunctionCall",
                        "src": "2432:63:44"
                      }
                    ],
                    "id": 6735,
                    "name": "ExpressionStatement",
                    "src": "2432:63:44"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6610,
                                  "type": "mapping(address => bool)",
                                  "value": "allowedMinters"
                                },
                                "id": 6736,
                                "name": "Identifier",
                                "src": "2506:14:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6717,
                                  "type": "address",
                                  "value": "a"
                                },
                                "id": 6737,
                                "name": "Identifier",
                                "src": "2521:1:44"
                              }
                            ],
                            "id": 6738,
                            "name": "IndexAccess",
                            "src": "2506:17:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 6739,
                            "name": "Literal",
                            "src": "2526:5:44"
                          }
                        ],
                        "id": 6740,
                        "name": "Assignment",
                        "src": "2506:25:44"
                      }
                    ],
                    "id": 6741,
                    "name": "ExpressionStatement",
                    "src": "2506:25:44"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6612,
                              "type": "uint256",
                              "value": "numAllowedMinters"
                            },
                            "id": 6742,
                            "name": "Identifier",
                            "src": "2542:17:44"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sub",
                                  "referencedDeclaration": 6001,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6151,
                                      "type": "type(library SafeMath)",
                                      "value": "SafeMath"
                                    },
                                    "id": 6743,
                                    "name": "Identifier",
                                    "src": "2562:8:44"
                                  }
                                ],
                                "id": 6744,
                                "name": "MemberAccess",
                                "src": "2562:12:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6612,
                                  "type": "uint256",
                                  "value": "numAllowedMinters"
                                },
                                "id": 6745,
                                "name": "Identifier",
                                "src": "2575:17:44"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 6746,
                                "name": "Literal",
                                "src": "2594:1:44"
                              }
                            ],
                            "id": 6747,
                            "name": "FunctionCall",
                            "src": "2562:34:44"
                          }
                        ],
                        "id": 6748,
                        "name": "Assignment",
                        "src": "2542:54:44"
                      }
                    ],
                    "id": 6749,
                    "name": "ExpressionStatement",
                    "src": "2542:54:44"
                  }
                ],
                "id": 6750,
                "name": "Block",
                "src": "2357:247:44"
              }
            ],
            "id": 6751,
            "name": "FunctionDefinition",
            "src": "2297:307:44"
          }
        ],
        "id": 6752,
        "name": "ContractDefinition",
        "src": "168:2439:44"
      }
    ],
    "id": 6753,
    "name": "SourceUnit",
    "src": "33:2576:44"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {},
      "links": {},
      "address": "0xB187563f60C20CB802FfdfA6B9694734920675B3",
      "transactionHash": "0x3b3d2acb0944b0fc6cd36e15b9894a628000d5c9e2ee40c806ce2d285a8c46e0"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-26T05:31:47.623Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAllowedMinter(address)": {
        "details": "Add an account to the list of accounts allowed to create ERC20 tokens",
        "params": {
          "a": "address to whitelist"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "constructor": {
        "details": "Create a new fungible token",
        "params": {
          "cap": "Sets the token market cap. This value is immutable, it can only be set once during construction. Default cap: 2147483648000000000000000000 or (2**31) + '000000000000000000'",
          "name": "Name of the token (default is FT)",
          "symbol": "Token identifier (default is SILK)"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isAllowedMinter(address)": {
        "details": "Test if an address is allowed to mint ERC20 tokens",
        "params": {
          "a": "address to test"
        },
        "returns": {
          "_0": "true if address is allowed to mint"
        }
      },
      "mint(address,uint256)": {
        "details": "Mint ERC20 tokens",
        "params": {
          "account": "Tokens created for this account",
          "amount": "Number of tokens to mint"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "removeAllowedMinter(address)": {
        "details": "Remove an account from the list of accounts allowed to create ERC20 tokens",
        "params": {
          "a": "address to remove from whitelist"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "title": "Extension of {ERC20} that adds a cap to the supply of tokens. ",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}